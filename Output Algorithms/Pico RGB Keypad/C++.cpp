#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string>
#include <iostream>

#include "pico/stdlib.h"
#include "pico_rgb_keypad.hpp"

using namespace pimoroni;

PicoRGBKeypad keypad;

const long animation[5][16] = {
    {0b111000110010010000000000,
     0b111000110010010000000000,
     0b111000110010010000000000,
     0b111000110010010000000000,
     0b111000110010010000000000,
     0b000000000000000000000000,
     0b000000000000000000000000,
     0b111000110010010000000000,
     0b111000110010010000000000,
     0b000000000000000000000000,
     0b000000000000000000000000,
     0b111000110010010000000000,
     0b111000110010010000000000,
     0b111000110010010000000000,
     0b111000110010010000000000,
     0b111000110010010000000000},
    {0b000111001101101111111111,
     0b000111001101101111111111,
     0b000111001101101111111111,
     0b000111001101101111111111,
     0b000111001101101111111111,
     0b111111111111111111111111,
     0b111111111111111111111111,
     0b000111001101101111111111,
     0b000111001101101111111111,
     0b111111111111111111111111,
     0b111111111111111111111111,
     0b000111001101101111111111,
     0b000111001101101111111111,
     0b000111001101101111111111,
     0b000111001101101111111111,
     0b000111001101101111111111}};

int main()
{
    stdio_init_all();
    keypad.init();
    keypad.set_brightness(1.0f);

    while (true)
    {
        for (int i = 0; i < 5; ++i)
        {
            int bits[16][3];
            for (int j = 0; j < 16; ++j)
            {
                bits[j][0] = animation[i][j] >> 16 & 255;
                bits[j][1] = animation[i][j] >> 8 & 255;
                bits[j][2] = animation[i][j] & 255;
            }
            for (int j = 0; j < 16; ++j)
                keypad.illuminate(j, bits[j][0], bits[j][1], bits[j][2]);

            keypad.update();
            sleep_ms(1000 / 1);
        }
    }

    return 0;
}
